# -*- coding: utf-8 -*-
# Generated by Django 1.11.14 on 2019-01-12 10:36
from __future__ import unicode_literals

import anytask_common.locale_funcs
import colorfield.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import issues.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tasks', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(blank=True, max_length=2500)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('sended_notify', models.BooleanField(default=False)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, max_length=500, null=True, upload_to=issues.models.get_file_path)),
                ('deleted', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='issues.Event')),
            ],
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.FloatField(default=0)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[(b'new', 'novyj'), (b'rework', 'na_dorabotke'), (b'verification', 'na_proverke'), (b'accepted', 'zachteno'), (b'auto_verification', 'na_avtomaticheskoj_proverke'), (b'need_info', 'trebuetsja_informacija')], default=b'new', max_length=20)),
                ('followers', models.ManyToManyField(blank=True, null=True, to=settings.AUTH_USER_MODEL)),
                ('responsible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responsible', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IssueField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=191)),
                ('title', models.CharField(blank=True, max_length=191)),
                ('history_message', models.CharField(blank=True, max_length=191)),
                ('plugin', models.CharField(default=b'FieldDefaultPlugin', max_length=191)),
                ('plugin_version', models.CharField(default=b'0.1', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='IssueStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='Format is {"ru": "C\u0435\u043c\u0438\u043d\u0430\u0440", "en": "Seminar", etc.} or {"ru": "C\u0435\u043c\u0438\u043d\u0430\u0440"}', max_length=191, validators=[anytask_common.locale_funcs.validate_json])),
                ('tag', models.CharField(blank=True, choices=[(b'rework', 'rework'), (b'verification', 'verification'), (b'accepted', 'accepted'), (b'seminar', 'seminar'), (b'accepted_after_deadline', 'accepted_after_deadline')], max_length=191, null=True)),
                ('color', colorfield.fields.ColorField(default=b'#818A91', max_length=18)),
                ('hidden', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='IssueStatusSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=191)),
                ('statuses', models.ManyToManyField(blank=True, null=True, to='issues.IssueStatus')),
            ],
        ),
        migrations.AddField(
            model_name='issue',
            name='status_field',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='issues.IssueStatus'),
        ),
        migrations.AddField(
            model_name='issue',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='issue',
            name='task',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tasks.Task'),
        ),
        migrations.AddField(
            model_name='event',
            name='field',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='issues.IssueField'),
        ),
        migrations.AddField(
            model_name='event',
            name='issue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='issues.Issue'),
        ),
        migrations.AlterUniqueTogether(
            name='issue',
            unique_together=set([('student', 'task')]),
        ),
    ]
